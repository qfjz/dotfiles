---
- name: Machine setup
  hosts: localhost
  become: true
  connection: local
  gather_facts: true

  tasks:
    - name: Get my user
      ansible.builtin.set_fact:
        remote_regular_user: "{{ ansible_env.SUDO_USER or ansible_user_id }}"

    - name: Install packages
      ansible.builtin.dnf:
        name:
          - age
          - asciidoc
          - bat
          - bpytop
          - bzip2
          - dnf-automatic
          - eza
          - fd-find
          - fzf
          - gh
          - git
          - git-delta
          - go-task
          - gopass
          - hddtemp
          - htop
          - hwinfo
          - inotify-tools
          - keychain
          - lsd
          - lynx
          - mc
          - ncdu
          - neofetch
          - neomutt
          - neovim
          - nmap
          - oathtool
          - opendoas
          - p7zip
          - picocom
          - procs
          - pv
          - pwgen
          - ripgrep
          - sd
          - skim
          - sqlite
          - supervisor
          - syncthing
          - tio
          - tmux
          - uucp
          - w3m
          - w3m-img
          - wireshark-cli
          - yt-dlp
          - zlib
          - zoxide
          - zsh
          - zsh-syntax-highlighting
        state: present

    - name: Change shell to zsh
      ansible.builtin.user:
        name: "{{ remote_regular_user }}"
        shell: /usr/bin/zsh

    - name: Install DNF plugins core
      ansible.builtin.dnf:
        name: dnf-plugins-core
        state: present

    - name: Add Brave Browser Repo
      ansible.builtin.yum_repository:
        name: brave-browser
        description: Brave Browser
        baseurl: https://brave-browser-rpm-release.s3.brave.com/x86_64/
        gpgkey: https://brave-browser-rpm-release.s3.brave.com/brave-core.asc
        gpgcheck: true
        enabled: true

    - name: Import Brave Browser GPG Key
      ansible.builtin.rpm_key:
        key: https://brave-browser-rpm-release.s3.brave.com/brave-core.asc
        state: present

    - name: Install Brave Browser
      ansible.builtin.dnf:
        name: brave-browser
        state: present

    - name: Add Docker repo
      ansible.builtin.yum_repository:
        name: docker
        description: Docker repo
        baseurl: "https://download.docker.com/linux/fedora/{{ ansible_distribution_major_version }}/{{ ansible_architecture }}/stable"
        gpgkey: "https://download.docker.com/linux/fedora/gpg"
        gpgcheck: true
        enabled: true

    - name: Install Docker
      ansible.builtin.dnf:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
      ignore_errors: true

    - name: Add Docker group
      ansible.builtin.group:
        name: docker
        state: present

    - name: Add user to docker group
      ansible.builtin.user:
        name: "{{ remote_regular_user }}"
        groups: docker
        append: true

    - name: Check if Neovim config exists
      ansible.builtin.shell: "ls ~{{ remote_regular_user }}/.config/nvim"
      register: neovim_config_exists
      ignore_errors: true
      changed_when: false

    - name: Clone Neovim Configuration
      when: neovim_config_exists is failed
      ansible.builtin.git:
        repo: https://github.com/qfjz/neovim
        dest: "~{{ remote_regular_user }}/.config/nvim"

    - name: Check if repository fedora-bin exists
      ansible.builtin.shell: "ls ~{{ remote_regular_user }}/.local/bin/F{{ ansible_distribution_major_version }}"
      register: fedora_bin_exists
      ignore_errors: true
      changed_when: false

    - name: Download additional software
      when: fedora_bin_exists is failed
      ansible.builtin.git:
        repo: https://github.com/qfjz/fedora-bin
        dest: "~{{ remote_regular_user }}/.local/bin/F{{ ansible_distribution_major_version }}"
        depth: 1
        single_branch: yes
        version: "F{{ ansible_distribution_major_version }}"
      ignore_errors: true

    - name: Chown .local/bin directory
      ansible.builtin.file:
        path: "~{{ remote_regular_user }}/.local/bin"
        state: directory
        recurse: yes
        owner: "{{ remote_regular_user }}"
        group: "{{ remote_regular_user }}"

    - name: Chown ~/.config/nvim
      ansible.builtin.file:
        path: "~{{ remote_regular_user }}/.config/nvim"
        state: directory
        recurse: yes
        owner: "{{ remote_regular_user }}"
        group: "{{ remote_regular_user }}"

    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "~{{ remote_regular_user }}/.backup"
        state: directory
        mode: '0755'

    - name: Create symlinks fedora-bin
      ansible.builtin.command:
        cmd: "~{{ remote_regular_user }}/.local/bin/fedora-bin-symlinks.sh"
      become: yes
      become_user: "{{ remote_regular_user }}"

    - name: Create zshrc
      ansible.builtin.command:
        cmd: "~{{ remote_regular_user }}/.local/bin/zshrc.sh"
      become: yes
      become_user: "{{ remote_regular_user }}"
