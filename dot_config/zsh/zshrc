# ZSHRC
# VARS
export FEDORA_VER=$($HOME/bin/fedora_ver.sh)
export EDITOR=nvim
export VISUAL=nvim
export PATH=$PATH:$HOME/bin
export PATH=$PATH:$HOME/.local/bin
export PATH=$PATH:$HOME/.cargo/bin
export PATH="$HOME/.scripts/bin:$PATH"
export PATH="$HOME/.local/bin/F$FEDORA_VER:$PATH"

# Neorg workspaces
export NEORG_HOME=$HOME/Notes/neorg/home
export NEORG_WORK=$HOME/Notes/norg/work
export NEORG_PUBLIC=$HOME/Notes/neorg/public

export LS_COLORS='di=1;35:fi=0:ln=31:pi=5:so=5:bd=5:cd=5:or=31:mi=0:ex=35:*zshrc=32:*.tar.gz=4;33'

if [[ ! -z $(command -v eza) ]]; then
	LS_CMD=eza
else
	LC_CMD=ls
fi

# export PS1="%F{green}%n@%F{cyan}%M:%~%f "
# All escape codes at http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html
 
# %F{color} sets the color
# %n is username
# %M is full hostname
# %f resets formatting
# %~ is current working directory
PROMPT='%F{green}%n@%F{cyan}%M:%~%f '
 
# %W is the date
# %* is time
# %? is the return code of previous command
# %(q.n.y) is a ternary that checks the variable in question %q
#   and outputs value n if it's false or 0, and value y is output
#   when %q is non-zero.
#   Replace q, n, and y with whatever values you want
RPROMPT='%W %* %(?.√.%?)'

function source_if_exists() {
    if test -r "$1"; then
        . "$1"
    fi
}

source_if_exists $HOME/.config/zsh/host/$(hostname)

HISTFILE=${HOME}/.zsh_history
HISTSIZE=100000
SAVEHIST=${HISTSIZE}

HISTDUP=erase

HIST_STAMPS="mm/dd/yyyy"

HISTORY_IGNORE="(ls|[bf]g|exit|reset|clear|cd|cd ..|cd..)"

# $ man zshoptions
unsetopt MENU_COMPLETE
unsetopt FLOWCONTROL

setopt ALWAYS_TO_END
setopt APPEND_HISTORY
setopt AUTO_MENU
setopt COMPLETE_IN_WORD
setopt EXTENDED_HISTORY
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_FIND_NO_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_NO_STORE
setopt HIST_REDUCE_BLANKS
setopt HIST_SAVE_NO_DUPS
setopt HIST_VERIFY
setopt INC_APPEND_HISTORY
setopt INTERACTIVE_COMMENTS
setopt PROMPT_SUBST
setopt SHARE_HISTORY

# aliases
alias ...="cd ../.."
alias ..="cd .."
alias c=chezmoi
alias cd-tmux=$HOME/bin/cd-tmux.sh
alias cdb-tmux=$HOME/bin/cdb-tmux.sh
alias n=nvim
alias t=tmux
alias task=go-task
alias v=nvim
alias cls=clear
alias g=git
alias gi=$HOME/bin/gi.sh
alias notes=$HOME/bin/notes.sh
alias ps=procs
alias mutt=neomutt
alias more=less
alias p=" gopass"
alias pass=" gopass"
alias df="df -T -h -x tmpfs -x devtmpfs -x squashfs"
alias q=exit
alias ls=$LS_CMD
alias ll='$LS_CMD -alh'
alias lx='$LS_CMD -x'
alias lsx="/usr/bin/ls -F -1 | grep '*$'"
alias less="bat --wrap character --paging=always --plain --pager 'less -FXR'"
alias cat=less
alias .z="$HOME/bin/chezmoi edit ~/.config/zsh/zshrc"
alias .b="$HOME/bin/chezmoi edit ~/.bootstrap/setup.yml"
alias .s="$EDITOR ~/.ssh/config"
alias ca="$HOME/bin/chezmoi apply -v"
alias ce="$HOME/bin/chezmoi edit"
alias cdiff="$HOME/bin/chezmoi diff"
alias cdb="source $HOME/.local/bin/cdb.sh"
alias cda="source $HOME/.local/bin/cdba.sh"
alias cdba="source $HOME/.local/bin/cdba.sh"
alias cdbd="source $HOME/.local/bin/cdbd.sh"
alias cdd="source $HOME/.local/bin/cdbd.sh"
alias cdbe="$EDITOR ~/.config/bmdirs"
alias cde="$EDITOR ~/.config/bmdirs"
alias ipa="$HOME/.local/bin/ipa.sh"
alias ipn="$HOME/.local/bin/ipn.sh"

alias -s .zshrc=$EDITOR

# ALT-C: fzf-cd-widget
# CTRL-T: fzf-file-widget
# CRTL-R: fzf-history-widget
if [[ -x $(which fzf 2> /dev/null) ]]; then
    source /usr/share/fzf/shell/key-bindings.zsh

    if which fd &>/dev/null
    then
        export FZF_DEFAULT_COMMAND="fd --type f --hidden --follow --exclude .git --color=always"
        export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
        export FZF_ALT_C_COMMAND="fd -t d . $HOME"

        _fzf_compgen_path() {
            fd --hidden --follow --exclude .git . "$1"
        }
        _fzf_compgen_dir() {
            fd --type d --hidden --follow --exclude .git . "$1"
        }
    fi
    # '^[[A' Strzałka w górę
    # '^[[B' Strzałka w dół
    # bindkey '^[[A' fzf-history-widget
    # bindkey '^[[B' fzf-history-widget
    export FZF_DEFAULT_OPTS="--ansi --info inline"
fi

precmd() {
    print ""
}

bindkey -v

# Uses $VISUAL editor
autoload -z edit-command-line
zle -N edit-command-line
# Edycja komendy w edytorze
bindkey -M vicmd v edit-command-line
bindkey -M viins '^e' edit-command-line

# Home / End
bindkey "${terminfo[khome]}" beginning-of-line
bindkey "${terminfo[kend]}" end-of-line

# sudo dnf install zsh-syntax-highlighting
source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

fpath=($HOME/.config/zsh/completions $fpath)

CASE_SENSITIVE="true"
HYPHEN_INSENSITIVE="true"

autoload -U compinit
compinit

zstyle ':completion:*' menu select

# starship prompt
which starship &>/dev/null && eval "$(starship init zsh)"

# zoxide cd
which zoxide &>/dev/null && eval "$(zoxide init zsh)"

# vim: set filetype=zsh:
